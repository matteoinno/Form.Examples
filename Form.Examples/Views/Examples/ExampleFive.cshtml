@model Form.Examples.Models.ExampleFiveViewModel

@{
    ViewBag.Title = "Highcharts form";
}

<h2>Highcharts form (Ajax form)</h2>
<!--The HttpMethod show the method type, the UpdateTargetId will contain the partial view returned from the POST, the LoadingElementId contains the element showed during the post.-->
<!--If you choose a modal as LoadingElementId, the Ajax Form will manage automatically the show and hide operations.-->
@using (Ajax.BeginForm("ExampleFive", "Examples", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "result", LoadingElementId = "loading-dialog" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>This is an Ajax Form.</h4>
        <h4>The Ajax Form is used to mock the "single page" application.</h4>
        <h4>To render the result on the same page, install the jquery.unobtrosive package.</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Invoices, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.InvoiceNumber, Model.Invoices, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.InvoiceNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateStart, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateStart, new { htmlAttributes = new { type = "date", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateStart, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateEnd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateEnd, new { htmlAttributes = new { type = "date", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateEnd, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div class="row">
    <!--This div will contain the result of the form. The id of this div is defined in the UpdateTargetId option.-->
    <div class="col-md-12" id="result"></div>
</div>
<!-- Modal -->
<div class="modal" id="loading-dialog" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Loading...</h5>      
            </div>
            <div class="modal-body text-center">
                <img src="~/Content/img/Spinner-1s-200px.gif" />
            </div>
            <div class="modal-footer">
            </div>
        </div>
    </div>
</div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts{
    @Scripts.Render("~/bundles/jqueryunob")
}